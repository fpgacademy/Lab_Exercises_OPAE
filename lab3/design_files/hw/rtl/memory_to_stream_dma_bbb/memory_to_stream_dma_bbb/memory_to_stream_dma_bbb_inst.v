	memory_to_stream_dma_bbb u0 (
		.clk_clk                        (_connected_to_clk_clk_),                        //   input,    width = 1,              clk.clk
		.csr_waitrequest                (_connected_to_csr_waitrequest_),                //  output,    width = 1,              csr.waitrequest
		.csr_readdata                   (_connected_to_csr_readdata_),                   //  output,   width = 64,                 .readdata
		.csr_readdatavalid              (_connected_to_csr_readdatavalid_),              //  output,    width = 1,                 .readdatavalid
		.csr_burstcount                 (_connected_to_csr_burstcount_),                 //   input,    width = 1,                 .burstcount
		.csr_writedata                  (_connected_to_csr_writedata_),                  //   input,   width = 64,                 .writedata
		.csr_address                    (_connected_to_csr_address_),                    //   input,    width = 8,                 .address
		.csr_write                      (_connected_to_csr_write_),                      //   input,    width = 1,                 .write
		.csr_read                       (_connected_to_csr_read_),                       //   input,    width = 1,                 .read
		.csr_byteenable                 (_connected_to_csr_byteenable_),                 //   input,    width = 8,                 .byteenable
		.csr_debugaccess                (_connected_to_csr_debugaccess_),                //   input,    width = 1,                 .debugaccess
		.host_read_waitrequest          (_connected_to_host_read_waitrequest_),          //   input,    width = 1,        host_read.waitrequest
		.host_read_readdata             (_connected_to_host_read_readdata_),             //   input,  width = 512,                 .readdata
		.host_read_readdatavalid        (_connected_to_host_read_readdatavalid_),        //   input,    width = 1,                 .readdatavalid
		.host_read_burstcount           (_connected_to_host_read_burstcount_),           //  output,    width = 3,                 .burstcount
		.host_read_writedata            (_connected_to_host_read_writedata_),            //  output,  width = 512,                 .writedata
		.host_read_address              (_connected_to_host_read_address_),              //  output,   width = 48,                 .address
		.host_read_write                (_connected_to_host_read_write_),                //  output,    width = 1,                 .write
		.host_read_read                 (_connected_to_host_read_read_),                 //  output,    width = 1,                 .read
		.host_read_byteenable           (_connected_to_host_read_byteenable_),           //  output,   width = 64,                 .byteenable
		.host_read_debugaccess          (_connected_to_host_read_debugaccess_),          //  output,    width = 1,                 .debugaccess
		.descriptor_fetch_address       (_connected_to_descriptor_fetch_address_),       //  output,   width = 48, descriptor_fetch.address
		.descriptor_fetch_burstcount    (_connected_to_descriptor_fetch_burstcount_),    //  output,    width = 3,                 .burstcount
		.descriptor_fetch_byteenable    (_connected_to_descriptor_fetch_byteenable_),    //  output,   width = 64,                 .byteenable
		.descriptor_fetch_read          (_connected_to_descriptor_fetch_read_),          //  output,    width = 1,                 .read
		.descriptor_fetch_readdata      (_connected_to_descriptor_fetch_readdata_),      //   input,  width = 512,                 .readdata
		.descriptor_fetch_readdatavalid (_connected_to_descriptor_fetch_readdatavalid_), //   input,    width = 1,                 .readdatavalid
		.descriptor_fetch_waitrequest   (_connected_to_descriptor_fetch_waitrequest_),   //   input,    width = 1,                 .waitrequest
		.descriptor_store_address       (_connected_to_descriptor_store_address_),       //  output,   width = 48, descriptor_store.address
		.descriptor_store_burstcount    (_connected_to_descriptor_store_burstcount_),    //  output,    width = 3,                 .burstcount
		.descriptor_store_byteenable    (_connected_to_descriptor_store_byteenable_),    //  output,   width = 64,                 .byteenable
		.descriptor_store_waitrequest   (_connected_to_descriptor_store_waitrequest_),   //   input,    width = 1,                 .waitrequest
		.descriptor_store_write         (_connected_to_descriptor_store_write_),         //  output,    width = 1,                 .write
		.descriptor_store_writedata     (_connected_to_descriptor_store_writedata_),     //  output,  width = 512,                 .writedata
		.mem_read_waitrequest           (_connected_to_mem_read_waitrequest_),           //   input,    width = 1,         mem_read.waitrequest
		.mem_read_readdata              (_connected_to_mem_read_readdata_),              //   input,  width = 512,                 .readdata
		.mem_read_readdatavalid         (_connected_to_mem_read_readdatavalid_),         //   input,    width = 1,                 .readdatavalid
		.mem_read_burstcount            (_connected_to_mem_read_burstcount_),            //  output,    width = 3,                 .burstcount
		.mem_read_writedata             (_connected_to_mem_read_writedata_),             //  output,  width = 512,                 .writedata
		.mem_read_address               (_connected_to_mem_read_address_),               //  output,   width = 48,                 .address
		.mem_read_write                 (_connected_to_mem_read_write_),                 //  output,    width = 1,                 .write
		.mem_read_read                  (_connected_to_mem_read_read_),                  //  output,    width = 1,                 .read
		.mem_read_byteenable            (_connected_to_mem_read_byteenable_),            //  output,   width = 64,                 .byteenable
		.mem_read_debugaccess           (_connected_to_mem_read_debugaccess_),           //  output,    width = 1,                 .debugaccess
		.m2s_st_source_data             (_connected_to_m2s_st_source_data_),             //  output,  width = 512,    m2s_st_source.data
		.m2s_st_source_valid            (_connected_to_m2s_st_source_valid_),            //  output,    width = 1,                 .valid
		.m2s_st_source_ready            (_connected_to_m2s_st_source_ready_),            //   input,    width = 1,                 .ready
		.m2s_st_source_startofpacket    (_connected_to_m2s_st_source_startofpacket_),    //  output,    width = 1,                 .startofpacket
		.m2s_st_source_endofpacket      (_connected_to_m2s_st_source_endofpacket_),      //  output,    width = 1,                 .endofpacket
		.m2s_st_source_empty            (_connected_to_m2s_st_source_empty_),            //  output,    width = 6,                 .empty
		.reset_reset                    (_connected_to_reset_reset_)                     //   input,    width = 1,            reset.reset
	);

